#docker-compose-dev-release
version: "3.9"

services:
  backend-dev:
    container_name: 'botkit-backend-dev-release'
    build:
      context: .
    ports:
      - "${PORT_CONTAINER:-3000}:${APP_PORT:-3000}"
    env_file:
      - .env.dev.release
    restart: always
    networks:
      - back-dev
      - default
    depends_on:
      mongo-dev:
        condition: service_healthy

  mongo-dev:
    container_name: 'botkit-mongodb-dev-release'
    image: mongo:5
    restart: always
    env_file:
      - .env.dev.release
    ports:
      - "27017:${MONGO_PORT:-27017}"
    volumes:
      - db_data:/data/db
      - db_config:/data/configdb
    networks:
      - back-dev
    command: ["--replSet", "${DB_REPLICATION_SET:-rs01}", "--bind_ip_all"]
    healthcheck:
      test: mongosh --eval "rs.initiate()"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      rabbitmq-dev:
        condition: service_healthy

  rabbitmq-dev:
    container_name: 'botkit-rabbitmq-dev-release'
    image: rabbitmq:latest
    env_file:
      - .env.dev.release
    ports:
      - "5672:5672" # RabbitMQ server
      - "15672:15672" # Management console
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - back-dev
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 30s
      retries: 3

networks:
  back-dev:
    driver: bridge
    internal: true

volumes:
  db_data:
  db_config:
  rabbitmq_data:
